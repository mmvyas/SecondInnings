{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _es6Promise = require('es6-promise');\n\nvar _shallowequal = require('shallowequal');\n\nvar _shallowequal2 = _interopRequireDefault(_shallowequal);\n\nvar _tokenizeUrl = require('./tokenizeUrl');\n\nvar _tokenizeUrl2 = _interopRequireDefault(_tokenizeUrl);\n\nvar _tableauApi = require('tableau-api');\n\nvar _tableauApi2 = _interopRequireDefault(_tableauApi);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  filters: _propTypes2.default.object,\n  url: _propTypes2.default.string.isRequired,\n  parameters: _propTypes2.default.object,\n  options: _propTypes2.default.object,\n  token: _propTypes2.default.string,\n  onLoad: _propTypes2.default.func,\n  query: _propTypes2.default.string\n};\nvar defaultProps = {\n  loading: false,\n  parameters: {},\n  filters: {},\n  options: {},\n  query: '?:embed=yes&:comments=no&:toolbar=yes&:refresh=yes'\n};\n\nvar TableauReport = function (_React$Component) {\n  _inherits(TableauReport, _React$Component);\n\n  function TableauReport(props) {\n    _classCallCheck(this, TableauReport);\n\n    var _this = _possibleConstructorReturn(this, (TableauReport.__proto__ || Object.getPrototypeOf(TableauReport)).call(this, props));\n\n    _this.state = {\n      filters: props.filters,\n      parameters: props.parameters\n    };\n    return _this;\n  }\n\n  _createClass(TableauReport, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initTableau();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var isReportChanged = nextProps.url !== this.props.url;\n      var isFiltersChanged = !(0, _shallowequal2.default)(this.props.filters, nextProps.filters, this.compareArrays);\n      var isParametersChanged = !(0, _shallowequal2.default)(this.props.parameters, nextProps.parameters);\n      var isLoading = this.state.loading; // Only report is changed - re-initialize\n\n      if (isReportChanged) {\n        this.initTableau();\n      } // Only filters are changed, apply via the API\n\n\n      if (!isReportChanged && isFiltersChanged && !isLoading) {\n        this.applyFilters(nextProps.filters);\n      } // Only parameters are changed, apply via the API\n\n\n      if (!isReportChanged && isParametersChanged && !isLoading) {\n        this.applyParameters(nextProps.parameters);\n      } // token change, validate it.\n\n\n      if (nextProps.token !== this.props.token) {\n        this.setState({\n          didInvalidateToken: false\n        });\n      }\n    }\n    /**\n     * Compares the values of filters to see if they are the same.\n     * @param  {Array<Number>} a\n     * @param  {Array<Number>} b\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'compareArrays',\n    value: function compareArrays(a, b) {\n      if (Array.isArray(a) && Array.isArray(b)) {\n        return a.sort().toString() === b.sort().toString();\n      }\n\n      return undefined;\n    }\n    /**\n     * Execute a callback when an array of promises complete, regardless of\n     * whether any throw an error.\n     */\n\n  }, {\n    key: 'onComplete',\n    value: function onComplete(promises, cb) {\n      _es6Promise.Promise.all(promises).then(function () {\n        return cb();\n      }, function () {\n        return cb();\n      });\n    }\n    /**\n     * Returns a vizUrl, tokenizing it if a token is passed and immediately\n     * invalidating it to prevent it from being used more than once.\n     */\n\n  }, {\n    key: 'getUrl',\n    value: function getUrl() {\n      var _props = this.props,\n          token = _props.token,\n          query = _props.query;\n\n      var parsed = _url2.default.parse(this.props.url, true);\n\n      if (!this.state.didInvalidateToken && token) {\n        this.invalidateToken();\n        return (0, _tokenizeUrl2.default)(this.props.url, token) + query;\n      }\n\n      return parsed.protocol + '//' + parsed.host + parsed.pathname + query;\n    }\n  }, {\n    key: 'invalidateToken',\n    value: function invalidateToken() {\n      this.setState({\n        didInvalidateToken: true\n      });\n    }\n    /**\n     * Asynchronously applies filters to the worksheet, excluding those that have\n     * already been applied, which is determined by checking against state.\n     * @param  {Object} filters\n     * @return {void}\n     */\n\n  }, {\n    key: 'applyFilters',\n    value: function applyFilters(filters) {\n      var _this2 = this;\n\n      var REPLACE = _tableauApi2.default.FilterUpdateType.REPLACE;\n      var promises = [];\n      this.setState({\n        loading: true\n      });\n\n      for (var key in filters) {\n        if (!this.state.filters.hasOwnProperty(key) || !this.compareArrays(this.state.filters[key], filters[key])) {\n          promises.push(this.sheet.applyFilterAsync(key, filters[key], REPLACE));\n        }\n      }\n\n      this.onComplete(promises, function () {\n        return _this2.setState({\n          loading: false,\n          filters: filters\n        });\n      });\n    }\n  }, {\n    key: 'applyParameters',\n    value: function applyParameters(parameters) {\n      var _this3 = this;\n\n      var promises = [];\n\n      for (var key in parameters) {\n        if (!this.state.parameters.hasOwnProperty(key) || this.state.parameters[key] !== parameters[key]) {\n          var val = parameters[key]; // Ensure that parameters are applied only when we have a workbook\n\n          if (this.workbook && this.workbook.changeParameterValueAsync) {\n            promises.push(this.workbook.changeParameterValueAsync(key, val));\n          }\n        }\n      }\n\n      this.onComplete(promises, function () {\n        return _this3.setState({\n          loading: false,\n          parameters: parameters\n        });\n      });\n    }\n    /**\n     * Initialize the viz via the Tableau JS API.\n     * @return {void}\n     */\n\n  }, {\n    key: 'initTableau',\n    value: function initTableau() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          filters = _props2.filters,\n          parameters = _props2.parameters;\n      var vizUrl = this.getUrl();\n\n      var options = _extends({}, filters, parameters, this.props.options, {\n        onFirstInteractive: function onFirstInteractive() {\n          _this4.workbook = _this4.viz.getWorkbook();\n          _this4.sheets = _this4.workbook.getActiveSheet().getWorksheets();\n          _this4.sheet = _this4.sheets[0];\n          _this4.props.onLoad && _this4.props.onLoad(new Date());\n        }\n      }); // cleanup\n\n\n      if (this.viz) {\n        this.viz.dispose();\n        this.viz = null;\n      }\n\n      this.viz = new _tableauApi2.default.Viz(this.container, vizUrl, options);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      return _react2.default.createElement('div', {\n        ref: function ref(c) {\n          return _this5.container = c;\n        }\n      });\n    }\n  }]);\n\n  return TableauReport;\n}(_react2.default.Component);\n\nTableauReport.propTypes = propTypes;\nTableauReport.defaultProps = defaultProps;\nexports.default = TableauReport;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}