{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\src\\\\components\\\\Introduction\\\\Visa\\\\Quiz.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Quiz.css';\nimport Question from \"./Question\";\nimport QuestionCount from \"./QuestionCount\";\nimport AnswerOption from \"./AnswerOption\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport { Link } from 'react-router-dom';\n\nfunction Quiz(props) {\n  var buttonStyle = {\n    cursor: 'pointer',\n    color: 'white',\n    textDecoration: 'none',\n    background: '#49a942',\n    margin: 'auto',\n    border: '1px solid',\n    borderRadius: '.25rem',\n    display: 'flex',\n    justifyContent: 'center',\n    fontSize: '17px'\n  };\n  var linkStyle = {\n    marginTop: '10px',\n    marginBottom: '10px'\n  };\n\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(ReactCSSTransitionGroup, {\n    className: \"container1\",\n    id: \"quiz\",\n    component: \"div\",\n    transitionName: \"fade\",\n    transitionEnterTimoeout: 800,\n    transitionLeaveTimeout: 500,\n    transitionAppear: true,\n    transitionAppearTimeout: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    key: props.questionId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Question, {\n    content: props.question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"answerOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, props.answerOptions.map(renderAnswerOptions)), React.createElement(Link, {\n    style: linkStyle,\n    to: \"/introduction/nextsteps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: buttonStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Skip the quiz and see steps to apply visa\"))));\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["C:\\Users\\MMV\\Desktop\\Final_System\\src\\components\\Introduction\\Visa\\Quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","ReactCSSTransitionGroup","Link","Quiz","props","buttonStyle","cursor","color","textDecoration","background","margin","border","borderRadius","display","justifyContent","fontSize","linkStyle","marginTop","marginBottom","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","counter","number","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './Quiz.css';\r\n\r\nimport Question from \"./Question\";\r\nimport QuestionCount from \"./QuestionCount\";\r\nimport AnswerOption from \"./AnswerOption\";\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Quiz(props) {\r\n\r\n    \r\n    let buttonStyle = {\r\n      cursor: 'pointer',\r\n      color:'white',\r\n      textDecoration:'none',\r\n      background: '#49a942',\r\n      margin: 'auto',\r\n      border: '1px solid',\r\n      borderRadius: '.25rem',\r\n      display:'flex',\r\n      justifyContent:'center',\r\n      fontSize:'17px',\r\n\r\n      }\r\n\r\n      let linkStyle = {\r\n       marginTop: '10px',\r\n       marginBottom: '10px'\r\n      }\r\n  function renderAnswerOptions(key) {\r\n\r\n    return (\r\n      <AnswerOption\r\n        key={key.content}\r\n        answerContent={key.content}\r\n        answerType={key.type}\r\n        answer={props.answer}\r\n        questionId={props.questionId}\r\n        onAnswerSelected={props.onAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n\r\n    \r\n    <ReactCSSTransitionGroup\r\n      className=\"container1\"\r\n      id = \"quiz\"\r\n      component=\"div\"\r\n      transitionName=\"fade\"\r\n      transitionEnterTimoeout={800}\r\n      transitionLeaveTimeout={500}\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n    >\r\n    \r\n    <div key={props.questionId}>\r\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\r\n        <Question content={props.question} />\r\n        <ul className=\"answerOptions\">\r\n          {props.answerOptions.map(renderAnswerOptions)}\r\n        </ul>\r\n        <Link style={linkStyle} to=\"/introduction/nextsteps\">\r\n    <button style={buttonStyle}>Skip the quiz and see steps to apply visa</button>\r\n    </Link>\r\n      </div>\r\n    </ReactCSSTransitionGroup>\r\n    \r\n  );\r\n\r\n}\r\n\r\nQuiz.propTypes = {\r\n  answer: PropTypes.string.isRequired,\r\n  answerOptions: PropTypes.array.isRequired,\r\n  counter: PropTypes.number.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  questionId: PropTypes.number.isRequired,\r\n  questionTotal: PropTypes.number.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}