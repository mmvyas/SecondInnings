{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\src\\\\components\\\\Map\\\\charts\\\\CrimialChart.js\";\nimport React from 'react';\nimport Chart from 'react-google-charts';\nimport Select from 'react-select';\nimport { Spinner } from 'react-bootstrap';\n\nvar CriminalChart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CriminalChart, _React$Component);\n\n  function CriminalChart(props) {\n    var _this;\n\n    _classCallCheck(this, CriminalChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CriminalChart).call(this, props));\n\n    _this.ChartDataSelectionChanged = function (e) {\n      _this.setState({\n        rateOrIncident: e.value\n      });\n    };\n\n    _this.state = {\n      rateOrIncident: \"Criminal Rate\",\n      currentLGA: _this.props.lga\n    };\n    var lgaid = _this.props.lga;\n    console.log(lgaid);\n    var jsonResponse;\n    var x = new XMLHttpRequest();\n    x.open('GET', 'https://scin-dev-test.appspot.com/dataserv?rid=' + lgaid + '&fac=crmn');\n\n    x.onload = x.onerror = function () {\n      console.log(x.responseText);\n      var data = x.responseText;\n      jsonResponse = JSON.parse(data);\n      console.log(jsonResponse);\n      this.setState({\n        fetchData: jsonResponse\n      });\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    x.send();\n    return _this;\n  }\n\n  _createClass(CriminalChart, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(previousProps, previousState) {\n      var lgaid = this.props.lga;\n      console.log(lgaid);\n      var jsonResponse;\n      var x = new XMLHttpRequest();\n      x.open('GET', 'https://scin-dev-test.appspot.com/dataserv?rid=' + lgaid + '&fac=crmn');\n\n      x.onload = x.onerror = function () {\n        console.log(x.responseText);\n        var data = x.responseText;\n        jsonResponse = JSON.parse(data);\n        console.log(jsonResponse);\n\n        if (previousProps.lga !== this.props.lga) {\n          this.setState({\n            fetchData: jsonResponse\n          });\n        }\n      }.bind(this);\n\n      x.send();\n    } // doCORSRequest = (lgaid) =>{\n    //     var jsonResponse\n    //     var x = new XMLHttpRequest();\n    //     x.open('GET', 'https://cors-anywhere.herokuapp.com/' + 'https://nd-inning-236710.appspot.com/dataserv?rid='+ lgaid +'&fac=crmn');\n    //     x.onload = x.onerror = function() {\n    //     console.log(x.responseText)\n    //     var data=x.responseText;\n    //     jsonResponse = JSON.parse(data);\n    //     console.log(jsonResponse);\n    //     this.setState({\n    //         fetchData: jsonResponse\n    //     }\n    //     )\n    //     }.bind(this);\n    //     x.send();\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"render\");\n      var resultData = this.state.fetchData;\n      var dataSet1 = [['Year', 'Criminal Rate (per 10k)']];\n      var dataSet2 = [['Year', 'Criminal incidents']];\n      var content = null;\n\n      if (resultData != null) {\n        for (var i = 0; i < resultData.years.length; i++) {\n          var year = resultData.years[i].toString();\n          var rate = resultData.rates[i];\n          var incidents = resultData.incidents[i];\n          dataSet1.push([year, rate]);\n          dataSet2.push([year, incidents]);\n        }\n\n        var rateinciOption = this.state.rateOrIncident.rateinciOption;\n        var rateinciOptionSelect = [{\n          \"label\": \"Criminal Rate\",\n          \"value\": \"Criminal Rate\"\n        }, {\n          \"label\": \"Criminal Incidents\",\n          \"value\": \"Criminal Incidents\"\n        }];\n        var dataSet = null;\n\n        if (this.state.rateOrIncident === \"Criminal Rate\") {\n          dataSet = dataSet1;\n        } else {\n          dataSet = dataSet2;\n        }\n\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(Select, {\n          value: rateinciOption,\n          onChange: this.ChartDataSelectionChanged,\n          options: rateinciOptionSelect,\n          defaultValue: {\n            label: \"Criminal Rate\",\n            value: \"Criminal Rate\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(Chart, {\n          height: '350px',\n          chartType: \"LineChart\",\n          loader: React.createElement(Spinner, {\n            animation: \"border\",\n            variant: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }),\n          data: dataSet,\n          options: {\n            // Material design options\n            chart: {\n              title: 'Criminal in this area'\n            }\n          } // For tests\n          ,\n          rootProps: {\n            'data-testid': '2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }));\n      } else {\n        content = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"criminalChart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return CriminalChart;\n}(React.Component);\n\nexport { CriminalChart as default };","map":{"version":3,"sources":["C:\\Users\\MMV\\Desktop\\Final_System\\src\\components\\Map\\charts\\CrimialChart.js"],"names":["React","Chart","Select","Spinner","CriminalChart","props","ChartDataSelectionChanged","e","setState","rateOrIncident","value","state","currentLGA","lga","lgaid","console","log","jsonResponse","x","XMLHttpRequest","open","onload","onerror","responseText","data","JSON","parse","fetchData","bind","send","previousProps","previousState","resultData","dataSet1","dataSet2","content","i","years","length","year","toString","rate","rates","incidents","push","rateinciOption","rateinciOptionSelect","dataSet","label","chart","title","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Chart from 'react-google-charts';\r\nimport Select from 'react-select';\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\n\r\nexport default class CriminalChart extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            rateOrIncident: \"Criminal Rate\",\r\n            currentLGA: this.props.lga\r\n        }\r\n        const lgaid= this.props.lga\r\n        console.log(lgaid)\r\n        var jsonResponse\r\n        var x = new XMLHttpRequest();\r\n        x.open('GET', 'https://scin-dev-test.appspot.com/dataserv?rid='+ lgaid +'&fac=crmn');\r\n        x.onload = x.onerror = function() {\r\n        console.log(x.responseText)\r\n        var data=x.responseText;\r\n        jsonResponse = JSON.parse(data);\r\n        console.log(jsonResponse);\r\n            this.setState({\r\n                fetchData: jsonResponse\r\n            })\r\n        \r\n        }.bind(this)\r\n        x.send();\r\n\r\n    }\r\n       \r\n\r\n        \r\n    \r\n\r\n    componentDidUpdate(previousProps, previousState){\r\n        const lgaid= this.props.lga\r\n        console.log(lgaid)\r\n        var jsonResponse\r\n        var x = new XMLHttpRequest();\r\n        x.open('GET', 'https://scin-dev-test.appspot.com/dataserv?rid='+ lgaid +'&fac=crmn');\r\n        x.onload = x.onerror = function() {\r\n        console.log(x.responseText)\r\n        var data=x.responseText;\r\n        jsonResponse = JSON.parse(data);\r\n        console.log(jsonResponse);\r\n        if (previousProps.lga !== this.props.lga) {\r\n            this.setState({\r\n                fetchData: jsonResponse\r\n            })\r\n        }\r\n        }.bind(this);\r\n        x.send();\r\n\r\n    }\r\n\r\n    \r\n    // doCORSRequest = (lgaid) =>{\r\n    //     var jsonResponse\r\n    //     var x = new XMLHttpRequest();\r\n    //     x.open('GET', 'https://cors-anywhere.herokuapp.com/' + 'https://nd-inning-236710.appspot.com/dataserv?rid='+ lgaid +'&fac=crmn');\r\n    //     x.onload = x.onerror = function() {\r\n    //     console.log(x.responseText)\r\n    //     var data=x.responseText;\r\n    //     jsonResponse = JSON.parse(data);\r\n    //     console.log(jsonResponse);\r\n    //     this.setState({\r\n    //         fetchData: jsonResponse\r\n    //     }\r\n    //     )\r\n    //     }.bind(this);\r\n    //     x.send();\r\n    // }\r\n    ChartDataSelectionChanged = (e) => {\r\n        this.setState({\r\n            rateOrIncident: e.value\r\n        });\r\n      }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n        const resultData = this.state.fetchData\r\n        let dataSet1 = [['Year', 'Criminal Rate (per 10k)']]\r\n        let dataSet2 = [['Year', 'Criminal incidents']]\r\n        let content = null\r\n        if (resultData != null){\r\n\r\n            for (var i =0; i<resultData.years.length;i++){\r\n                let year = resultData.years[i].toString()\r\n                let rate = resultData.rates[i]\r\n                let incidents = resultData.incidents[i]\r\n                dataSet1.push([year,rate])\r\n                dataSet2.push([year,incidents])\r\n\r\n            }\r\n       \r\n        const { rateinciOption } = this.state.rateOrIncident\r\n        const rateinciOptionSelect = [\r\n            {\r\n              \"label\": \"Criminal Rate\",\r\n              \"value\": \"Criminal Rate\"\r\n            },\r\n            {\r\n              \"label\": \"Criminal Incidents\",\r\n              \"value\": \"Criminal Incidents\"\r\n            }\r\n           ]\r\n           let dataSet = null\r\n           if (this.state.rateOrIncident ===\"Criminal Rate\"){\r\n               dataSet = dataSet1\r\n           }\r\n           else{\r\n               dataSet = dataSet2\r\n           }\r\n           content = (\r\n               <div>\r\n           <Select \r\n                value={rateinciOption} \r\n                onChange={this.ChartDataSelectionChanged} \r\n                options={rateinciOptionSelect}\r\n                defaultValue={{ label: \"Criminal Rate\", value: \"Criminal Rate\" }} />\r\n           \r\n           <Chart\r\n              height={'350px'}\r\n               chartType=\"LineChart\"\r\n               loader={<Spinner animation=\"border\" variant=\"primary\" />}\r\n               \r\n               data={dataSet}\r\n               options={{\r\n                   // Material design options\r\n                   chart: {\r\n                       title: 'Criminal in this area',\r\n                   },\r\n               }}\r\n               // For tests\r\n               rootProps={{ 'data-testid': '2' }}\r\n           />\r\n           </div>\r\n           )\r\n           \r\n\r\n    }\r\n        else{\r\n            content = <p></p>\r\n\r\n        }\r\n        \r\n\r\n        return (\r\n            <div className = \"criminalChart\" >\r\n                {content}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}