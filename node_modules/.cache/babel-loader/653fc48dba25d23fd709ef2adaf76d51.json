{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\src\\\\components\\\\Compare\\\\MapCompare.js\";\nimport React from 'react';\nimport L from 'leaflet';\nimport lga from './vic-simplist.json';\n\nvar MapPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapPage, _React$Component);\n\n  function MapPage(props) {\n    _classCallCheck(this, MapPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MapPage).call(this, props)); // }\n  } // highlightFeature = (e) =>{\n  //     var layer = e.target;\n  //     layer.setStyle({\n  //         // weight: 5,\n  //         fillColor: '#990000'\n  //         // dashArray: ''\n  //         // fillOpacity: 0.7\n  //     });\n  //     if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n  //         layer.bringToFront();\n  //     }\n  //     this.info.update(layer.feature.properties)\n  // }\n  // resetHighlight = (e) => {\n  //     this.geojson.setStyle(\n  //         this.style1\n  //     );\n  //     this.info.update()\n  // }\n\n\n  _createClass(MapPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.map) {\n        this.map.remove();\n      } else {\n        this.map = L.map('map').setView([-36.202806, 144.990440], 6);\n        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\n          maxZoom: 18,\n          attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' + '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' + 'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n          id: 'mapbox.light'\n        }).addTo(this.map);\n        this.info = L.control();\n\n        this.info.onAdd = function (map) {\n          this._div = L.DomUtil.create('div', 'info'); // create a div with a class \"info\"\n\n          this.update();\n          return this._div;\n        };\n\n        this.info.update = function (props) {\n          var id = props ? props.lg_ply_pid : null;\n          this._div.innerHTML = '<h4>Information of the area</h4>' + (props ? '<b>' + 'Name: ' + props.vic_lga__3 + '</b><br />' + 'Population: ' + \"test\" : 'Hover over a state');\n        };\n\n        this.info.addTo(this.map);\n        this.geojson = L.geoJson(lga, {\n          onEachFeature: this.onEachFeatures,\n          style: this.style1\n        }).addTo(this.map);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"mapChart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MapPage;\n}(React.Component);\n\nexport { MapPage as default };","map":{"version":3,"sources":["C:\\Users\\MMV\\Desktop\\Final_System\\src\\components\\Compare\\MapCompare.js"],"names":["React","L","lga","MapPage","props","map","remove","setView","tileLayer","maxZoom","attribution","id","addTo","info","control","onAdd","_div","DomUtil","create","update","lg_ply_pid","innerHTML","vic_lga__3","geojson","geoJson","onEachFeature","onEachFeatures","style","style1","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;IACqBC,O;;;;;AACjB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gFACTA,KADS,IAGnB;AACC,G,CAKD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;wCAGoB;AAChB,UAAG,KAAKC,GAAR,EAAa;AACT,aAAKA,GAAL,CAASC,MAAT;AACD,OAFH,MAGM;AACN,aAAKD,GAAL,GAAWJ,CAAC,CAACI,GAAF,CAAM,KAAN,EAAaE,OAAb,CAAqB,CAAC,CAAC,SAAF,EAAa,UAAb,CAArB,EAA+C,CAA/C,CAAX;AACAN,QAAAA,CAAC,CAACO,SAAF,CAAY,4JAAZ,EAA0K;AACtKC,UAAAA,OAAO,EAAE,EAD6J;AAEtKC,UAAAA,WAAW,EAAE,8FACT,0EADS,GAET,wDAJkK;AAKtKC,UAAAA,EAAE,EAAE;AALkK,SAA1K,EAOKC,KAPL,CAOW,KAAKP,GAPhB;AASI,aAAKQ,IAAL,GAAYZ,CAAC,CAACa,OAAF,EAAZ;;AAEA,aAAKD,IAAL,CAAUE,KAAV,GAAkB,UAAUV,GAAV,EAAe;AAC7B,eAAKW,IAAL,GAAYf,CAAC,CAACgB,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,MAAxB,CAAZ,CAD6B,CACgB;;AAC7C,eAAKC,MAAL;AACC,iBAAO,KAAKH,IAAZ;AACJ,SAJD;;AAMA,aAAKH,IAAL,CAAUM,MAAV,GAAmB,UAAUf,KAAV,EAAiB;AAChC,cAAMO,EAAE,GAAIP,KAAK,GACbA,KAAK,CAACgB,UADO,GAEX,IAFN;AAKA,eAAKJ,IAAL,CAAUK,SAAV,GAAsB,sCAAuCjB,KAAK,GAClE,QAAQ,QAAR,GAAmBA,KAAK,CAAEkB,UAA1B,GAAuC,YAAvC,GACG,cADH,GACoB,MAF8C,GAIhE,oBAJoB,CAAtB;AAKf,SAXW;;AAaZ,aAAKT,IAAL,CAAUD,KAAV,CAAgB,KAAKP,GAArB;AAIQ,aAAKkB,OAAL,GAAetB,CAAC,CAACuB,OAAF,CAAUtB,GAAV,EAAe;AAC1BuB,UAAAA,aAAa,EAAE,KAAKC,cADM;AAE1BC,UAAAA,KAAK,EAAE,KAAKC;AAFc,SAAf,EAGZhB,KAHY,CAGN,KAAKP,GAHC,CAAf;AAMH;AACA;;;6BAMQ;AAEL,aAAQ;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CAAR;AAKH;;;;EAhGgCL,KAAK,CAAC6B,S;;SAAtB1B,O","sourcesContent":["import React from 'react'\r\nimport L from 'leaflet'\r\nimport lga from './vic-simplist.json'\r\nexport default class MapPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    // }\r\n    }\r\n\r\n\r\n\r\n    \r\n    // highlightFeature = (e) =>{\r\n    //     var layer = e.target;\r\n    \r\n    //     layer.setStyle({\r\n    //         // weight: 5,\r\n    //         fillColor: '#990000'\r\n    //         // dashArray: ''\r\n    //         // fillOpacity: 0.7\r\n    //     });\r\n    \r\n    //     if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\r\n    //         layer.bringToFront();\r\n    //     }\r\n    //     this.info.update(layer.feature.properties)\r\n\r\n    // }\r\n\r\n    // resetHighlight = (e) => {\r\n\r\n    //     this.geojson.setStyle(\r\n    //         this.style1\r\n    //     );\r\n    //     this.info.update()\r\n    // }\r\n\r\n\r\n    componentDidMount() {\r\n        if(this.map) {\r\n            this.map.remove();\r\n          }\r\n          else{\r\n        this.map = L.map('map').setView([-36.202806, 144.990440], 6);\r\n        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\r\n            maxZoom: 18,\r\n            attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n                '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n                'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n            id: 'mapbox.light'\r\n        })\r\n            .addTo(this.map);\r\n\r\n            this.info = L.control();\r\n\r\n            this.info.onAdd = function (map) {\r\n                this._div = L.DomUtil.create('div', 'info'); // create a div with a class \"info\"\r\n                this.update();\r\n                 return this._div;\r\n            };\r\n            \r\n            this.info.update = function (props) {\r\n                const id = (props ?\r\n                    props.lg_ply_pid\r\n                    : null)\r\n                \r\n                    \r\n                this._div.innerHTML = '<h4>Information of the area</h4>' +  (props ?\r\n                '<b>' + 'Name: ' + props. vic_lga__3 + '</b><br />'\r\n                 + 'Population: ' + \"test\" \r\n                \r\n                : 'Hover over a state');\r\n};\r\n\r\nthis.info.addTo(this.map);\r\n        \r\n        \r\n\r\n        this.geojson = L.geoJson(lga, {\r\n            onEachFeature: this.onEachFeatures,\r\n            style: this.style1\r\n        }).addTo(this.map);\r\n\r\n        \r\n    }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (<div className='mapChart'>\r\n            <div id=\"map\">\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}