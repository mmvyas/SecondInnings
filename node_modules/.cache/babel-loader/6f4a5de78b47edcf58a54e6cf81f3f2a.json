{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\MMV\\\\Desktop\\\\Final_System\\\\src\\\\components\\\\testcors2.js\";\nimport React from 'react';\n\nvar MyComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyComponent, _React$Component);\n\n  function MyComponent(props) {\n    var _this;\n\n    _classCallCheck(this, MyComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyComponent).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(MyComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://scin-recom-serv.appspot.com/findreg?nat=Afghanistan&age=15-24&jin=Accommodation%20and%20Food%20Services&hpr=&hrt=\", {\n        method: \"GET\",\n        // *GET, POST, PUT, DELETE, etc.\n        mode: \"no-cors\",\n        // no-cors, cors, *same-origin\n        credentials: \"include\" // include, *same-origin, omit\n\n      }) // .then(res => JSON.parse(res))\n      .then(function (result) {\n        console.log(result);\n\n        _this2.setState({\n          isLoaded: true,\n          items: result.items\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        console.log(error);\n\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, this.state.items), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"show sth\"));\n      }\n    }\n  }]);\n\n  return MyComponent;\n}(React.Component);\n\nexport { MyComponent as default };","map":{"version":3,"sources":["C:\\Users\\MMV\\Desktop\\Final_System\\src\\components\\testcors2.js"],"names":["React","MyComponent","props","state","error","isLoaded","items","fetch","method","mode","credentials","then","result","console","log","setState","message","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IACqBC,W;;;;;AACjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,2HAAD,EAA6H;AAChIC,QAAAA,MAAM,EAAE,KADwH;AACjH;AACfC,QAAAA,IAAI,EAAE,SAF0H;AAE/G;AACjBC,QAAAA,WAAW,EAAE,SAHmH,CAGxG;;AAHwG,OAA7H,CAAL,CAME;AANF,OAOGC,IAPH,CAQI,UAACC,MAAD,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,KAAK,EAAEM,MAAM,CAACN;AAFF,SAAd;AAKD,OAfL,EAiBI;AACA;AACA;AACA,gBAACF,KAAD,EAAW;AACPS,QAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;;AACF,QAAA,MAAI,CAACW,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OA1BL;AA4BD;;;6BAEQ;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,KADlB,eACkBA,KADlB;;AAEP,UAAIF,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACY,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACL,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA,EAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKF,KAAL,CAAWG,KAAf,CAJE,EAKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALE,CADJ;AASD;AACF;;;;EA1DoCN,KAAK,CAACiB,S;;SAA1BhB,W","sourcesContent":["import React from 'react'\r\nexport default class MyComponent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(\"https://scin-recom-serv.appspot.com/findreg?nat=Afghanistan&age=15-24&jin=Accommodation%20and%20Food%20Services&hpr=&hrt=\",{\r\n        method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"no-cors\", // no-cors, cors, *same-origin\r\n        credentials: \"include\", // include, *same-origin, omit\r\n    }\r\n)\r\n        // .then(res => JSON.parse(res))\r\n        .then(\r\n          (result) => {\r\n            console.log(result)\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result.items\r\n            });\r\n            \r\n          },\r\n          \r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n              console.log(error)\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n            <div>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n          <p>{this.state.items}</p>\r\n          <p>show sth</p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}